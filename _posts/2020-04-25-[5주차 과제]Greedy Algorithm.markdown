---
layout: single
title: Greedy Algorithm Ex
date:   2020-04-25 17:33:09 +0900
categories: jekyll update
author : Sang Jin
---

#### 탐욕 알고리즘 Greedy Algorithm

###### 출처 : 프로그래머스 - 탐욕법 -구명보트

---------

#### 문제설명

##### 무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 **2명**씩 밖에 탈 수 없고, 무게 제한도 있습니다.

##### 예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은 같이 탈 수 있지만 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게 제한을 초과하여 같이 탈 수 없습니다.

##### 구명보트를 최대한 적게 사용하여 모든 사람을 구출하려고 합니다.

##### 사람들의 몸무게를 담은 배열 people과 구명보트의 무게 제한 limit가 매개변수로 주어질 때, 모든 사람을 구출하기 위해 필요한 구명보트 개수의 최솟값을 return 하도록 solution 함수를 작성해주세요.



#### 제한사항

- 무인도에 갇힌 사람은 1명 이상 50,000명 이하입니다.
- 각 사람의 몸무게는 40kg 이상 240kg 이하입니다.
- 구명보트의 무게 제한은 40kg 이상 240kg 이하입니다.
- 구명보트의 무게 제한은 항상 사람들의 몸무게 중 최댓값보다 크게 주어지므로 사람들을 구출할 수 없는 경우는 없습니다.

#### 입출력  예

| people           | limit | return |
| ---------------- | ----- | ------ |
| [70, 50, 80, 50] | 100   | 3      |
| [70, 80, 50]     | 100   | 3      |

#### 풀이

##### 1. 한 보트에는 최대 두명만 탑승 할 수 있다는 것이 포인트이다.

##### 2. 몸무게가 가장 가벼운 사람과 무거운 사람의 합을 계산하여 한계보다 높을경우 가장 무거운 사람 혼자 보트를 태워 내보낸다. (다른 사람과 같이 탈 경우 반드시 한계치를 초과한다.)

##### 3.  몸무게가 가장 가벼운 사람과 무거운 사람의 합이 한계치를 초과하지 않는다면 두명을 같이 보트에 태운다.

##### 4. 가장 가벼운 사람이 보트에 탔으므로 기준을 바꾸어 다시 실행한다.

#### 소스코드

~~~java
import java.util.Arrays;
class Solution {
	public int solution(int[] people, int limit) {
		int answer = 0;
		int i = 0;
        int j;

		Arrays.sort(people); // 몸무게를 오름차순으로 정렬해 가장 무거운사람부터 확인.
		for(j=people.length-1; i<=j; j--) {
			if(people[j] + people[i] > limit) // 최소 + 최대 몸무게가 무게제한보다 큰 경우
				answer ++; // 가장 큰 몸무게의 사람을 혼자 보트에 태워 보낸다.
            
			else { // 최소 + 최대 몸무게가 무게제한보다 작은경우
				answer ++; //두명을 같이 보트에 태운다
				i ++; //가장 몸무게가 작은 사람이 없어졌으므로 다음 사람을 기준으로 한다.
			}
		}
		return answer;
	}
}
~~~

